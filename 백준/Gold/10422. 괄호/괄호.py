import sys
input = sys.stdin.readline

t = int(input())

dp = [0] * (5001)
dp[0] = 1
MOD = int(1e9 + 7)

# dp[x] : 길이가 x 짜리인 괄호문자열 개수
# 길이가 홀수인 올바른 괄호는 불가능하다
# dp[n] 이나올수있는 경우는 즉 길이가 N 인 올바른 문자열이 나올수있는경우는 다음과 같다
"""
1. ( A(n - 2) ) -> 길이가 n - 2인 올바른 문자열에다가 가장 좌측,우측에 ( ) 를 넣는경우 ->
2. 올바른 문자열 x 올바른 문자열 조합은 항상 올바른 문자열 조합이 된다.
3. 올바르지않은문자열 x 올바른 문자열 -> 항상 불가능
4. 올바르지않은문자열 x 올바르지않은 문자열 -> 올바른문자열이 가능 (1번케이스)

X

따라서 
A[1] * A[n - 1] 
A[2] * A[n - 2]
...
A[n - 1] * A[1]
위 점화식에서 홀수인경우는 0이기떄문에 자동으로 무시된다.

최종 점화식은 DP[n] = (DP[1] * D[n - 1] + DP[2] * DP[n - 2] ... DP[n - 1] * DP[1] ) + DP[n - 2] 가된다
() () () ->  )( )( 

X

올바른 풀이법 

j번째에 ) 가온다고 생각하자 

( ... ) ...
길이가 j - 2개인 올바른 괄호문자열 x (길이가 n - j 개인 올바른괄호문자열) 
dp[j - 2]  * dp[n - j] 가 될것이다.
"""
for i in range(2,5001,2):
    for j in range(2,i + 1):
        dp[i] = (dp[i] + dp[j - 2] * dp[i - j]) % MOD


for _ in range(t):
    l = int(input())
    print(dp[l])